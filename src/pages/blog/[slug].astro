---
import type { GetStaticPaths } from "astro"
import { Image } from "astro:assets"
import { getEntry, getCollection } from "astro:content"

import { SITE_TITLE } from "../../consts"
import BlogLayout from "@layouts/BlogLayout.astro"
import Aside from "@components/aside/Aside.astro"
import AsideArticle from "@components/aside/AsideArticle.astro"
import AsideAuthor from "@components/aside/AsideAuthor.astro"
import AsideRelated from "@components/aside/AsideRelated.astro"
import AsideShare from "@components/aside/AsideShare.astro"
import AsideTags from "@components/aside/AsideTags.astro"
import Seo from "@components/seo/Seo.astro"
import { Icon } from "astro-icon/components"
import Comments from "@components/Comments.astro"
import BuyMeACoffee from "@components/BuyMeACoffee.astro"

export const getStaticPaths = (async () => {
	const blogs = await getCollection("blogs", (entry) => entry.data.draft !== true)
	return blogs.map((entry) => {
		return {
			params: { slug: entry.slug },
			props: { entry }
		}
	})
}) satisfies GetStaticPaths

const { entry } = Astro.props

const author = entry.data.author ? await getEntry("authors", entry.data.author.id) : undefined

const { Content, headings, remarkPluginFrontmatter } = await entry.render()
---

<BlogLayout>
	{entry.data.seo && <Seo seo={entry.data.seo} options={{ siteName: SITE_TITLE }} slot="head" />}
	{
		!entry.data.seo && (
			<Seo
				slot="head"
				seo={{ title: entry.data.title, description: entry.data.description }}
				options={{ siteName: SITE_TITLE }}
			/>
		)
	}
	<div
		class="grid grid-cols-1 gap-12 md:grid-cols-[minmax(0,_2fr),_1fr] xl:grid-cols-[minmax(0,_3fr),_1fr]">
		<article
			class="[&_pre]:scrollable prose-sm prose-stone !max-w-full sm:prose xl:prose-lg dark:prose-invert prose-h1:mb-0 prose-p:text-pretty prose-a:underline-offset-2 hover:prose-a:decoration-primary-600 prose-blockquote:border-secondary-600 prose-code:rounded prose-code:bg-grayish-200 prose-code:px-1 prose-code:py-0.5 prose-code:font-medium prose-code:text-black prose-code:before:content-[''] prose-code:after:content-[''] prose-pre:!bg-grayish-900 prose-img:my-0 dark:hover:prose-a:decoration-primary-400 dark:prose-blockquote:border-secondary-400 dark:prose-code:bg-grayish-800 dark:prose-code:text-grayish-100 dark:prose-pre:border dark:prose-pre:border-grayish-700 [&>pre>code]:bg-transparent"
			data-pagefind-body>
			<header class="flex flex-col gap-6">
				{
					entry.data.featuredMedia !== undefined && entry.data.featuredMedia.id !== 0 && (
						<Image
							class="rounded-lg"
							src={entry.data.featuredMedia.src}
							alt={entry.data.featuredMedia.alt || "Alt text mising"}
							widths={[400, 607, 735, 757, 876]}
							sizes="(max-width: 432px) 400px, (max-width: 639px) 607px, (max-width: 767px) 735px, (max-width: 1023px) 607px, (max-width: 1279px) 757px, 876px"
							loading="eager"
							transition:name={`fm-${entry.slug}`}
						/>
					)
				}
				<h1 class="text-balance" transition:name={`h-${entry.slug}`}>
					{entry.data.title}
				</h1>
				<div class="flex flex-col gap-1 lg:flex-row lg:items-center lg:gap-2">
					<a
						class="text-sm !no-underline underline-offset-2 hover:!underline"
						href={`/author/${author?.id}`}>
						{author?.data?.name || "unknown"}
					</a>
					<span class="hidden text-secondary-700 lg:inline-block dark:text-secondary-300"> | </span>
					<div class="flex">
						<time class="text-sm" datetime={entry.data.createdAt.toISOString()}>
							{
								entry.data.createdAt.toLocaleDateString(undefined, {
									month: "short",
									day: "numeric",
									year: "numeric"
								})
							}
						</time>
						{
							entry.data.modifiedAt && entry.data.modifiedAt !== entry.data.createdAt && (
								<>
									<span class="text-sm italic">&nbsp;(updated&nbsp;</span>
									<time class="text-sm italic" datetime={entry.data.modifiedAt.toISOString()}>
										{entry.data.modifiedAt.toLocaleDateString(undefined, {
											month: "short",
											day: "numeric",
											year: "numeric"
										})}
									</time>
									<span class="text-sm">)</span>
								</>
							)
						}
					</div>
					<span class="hidden text-secondary-700 lg:inline-block dark:text-secondary-300"> | </span>
					<div class="flex gap-1">
						<Icon class="size-5" name="mdi:book-clock-outline" aria-hidden="true" />
						<span class="text-sm">{remarkPluginFrontmatter.minutesRead}</span>
					</div>
				</div>
			</header>
			<Content />
		</article>
		<Aside>
			<AsideShare title={entry.data.title} />
			{headings && headings.length > 0 && <AsideArticle {headings} />}
			{entry.data.tags && <AsideTags tags={entry.data.tags} />}
			{
				entry.data.categories && (
					<AsideRelated categories={entry.data.categories} slug={entry.slug} />
				)
			}
			{entry.data.author && <AsideAuthor authorId={entry.data.author.id} slug={entry.slug} />}
			<BuyMeACoffee />
		</Aside>
	</div>

	<Comments post={entry} />
</BlogLayout>
