<!-- ---
import { convertMarkdown } from "@utils/converters"
import type { CollectionEntry } from "astro:content"
import { db, and, eq, Comment } from "astro:db"

export const prerender = false

type Props = {
	post: CollectionEntry<"blogs">
}

const { post } = Astro.props

const comments = await db
	.select()
	.from(Comment)
	// .where(eq(Comment.postSlug, post.slug))
	.where(and(eq(Comment.status, "approved"), eq(Comment.postSlug, post.slug)))
	.orderBy(Comment.createdAt)
---

{
	(!comments || (comments && comments.length === 0)) && (
		<div class="my-4">No comments yet. You could be the first person to comment!</div>
	)
}
{
	comments && comments.length > 0 && (
		<>
			<ul class="my-4 space-y-4">
				{comments &&
					comments.length > 0 &&
					comments.map((comment) => (
						<li class="space-y-3 rounded-sm border border-grayish-200 bg-grayish-100 p-4 text-grayish-700 dark:border-grayish-700 dark:bg-grayish-900 dark:text-grayish-200">
							<div
								class="whitespace-pre-wrap [&>pre>code]:bg-transparent [&_blockquote]:border-l-4 [&_blockquote]:border-l-grayish-500 [&_blockquote]:pl-4 [&_code]:rounded-sm [&_code]:bg-grayish-200 [&_code]:px-1 [&_code]:py-0.5 [&_code]:font-medium [&_code]:text-black [&_code]:before:content-[''] [&_code]:after:content-[''] dark:[&_code]:bg-grayish-800 dark:[&_code]:text-grayish-100 [&_pre]:rounded-sm [&_pre]:border [&_pre]:border-grayish-300 [&_pre]:p-2 dark:[&_pre]:border-grayish-700"
								set:html={convertMarkdown(comment.text)}
							/>
							<footer class="flex gap-1.5 text-sm text-grayish-600 dark:text-grayish-300">
								<div class="">Written by {comment.name ?? "Anonymous"}</div> on
								<time class="" datetime={comment.createdAt.toISOString()}>
									{comment.createdAt.toLocaleDateString(undefined, {
										month: "short",
										day: "numeric",
										year: "numeric"
									})}
								</time>
							</footer>
						</li>
					))}
			</ul>
		</>
	)
} -->
