---
import type { CollectionEntry } from "astro:content"
import { Icon } from "astro-icon/components"
import InputTextarea from "./form/InputTextarea.astro"
import InputText from "./form/InputText.astro"
import Button from "./form/Button.astro"
import CommentList from "./CommentList.astro"

type Props = {
	post: CollectionEntry<"blogs">
}

const { post } = Astro.props
---

<section class="my-12 space-y-4 rounded border border-secondary-200 p-4 dark:border-secondary-800">
	<h2 class="font-baloo2 text-3xl font-bold">Comments</h2>
	<p>
		Please share your thoughts about <span
			class="font-baloo2 text-secondary-600 dark:text-secondary-400">
			{post.data.title}</span
		> by leaving me a comment. Thank you.
	</p>
	<details class="group peer">
		<summary class="list-none py-2">
			<span class="sr-only">Add a comment</span>
			<Icon
				class="size-7 hover:text-secondary-600 group-open:hidden dark:hover:text-secondary-400"
				name="mdi:comment-plus"
				aria-hidden="true"
				title="Add a comment"
			/>
			<Icon
				class="hidden size-7 hover:text-secondary-600 group-open:block dark:hover:text-secondary-400"
				name="mdi:comment-minus"
				aria-hidden="true"
				title="Add a comment"
			/>
		</summary>
	</details>
	<div
		class="max-h-0 overflow-hidden transition-[max-height] duration-200 ease-in peer-open:max-h-[22rem] peer-open:duration-300 peer-open:ease-in-out md:peer-open:max-h-56">
		<form
			class="group/form grid gap-x-4 gap-y-6 rounded border border-grayish-200 p-4 md:grid-cols-[minmax(0,1fr)_minmax(0,1fr)_auto] dark:border-grayish-700 md:[&>div:first-child]:col-span-3"
			id="formComment">
			<InputTextarea
				class="!bg-transparent [&+label]:bg-grayish-50 dark:[&+label]:bg-grayish-950"
				label="Comment"
				id="text"
				name="text"
				rows="4"
				required
			/>
			<InputText
				class="!bg-transparent [&+label]:bg-grayish-50 dark:[&+label]:bg-grayish-950"
				label="Name"
				id="name"
				name="name"
				type="text"
			/>
			<InputText
				class="!bg-transparent [&+label]:bg-grayish-50 dark:[&+label]:bg-grayish-950"
				label="Email"
				id="email"
				name="email"
				type="email"
			/>
			<input class="hidden" type="hidden" name="postSlug" value={post.slug} />

			<Button
				class="flex items-center justify-center gap-2 group-invalid/form:pointer-events-none group-invalid/form:opacity-50"
				type="submit"
				outline={true}>
				<Icon class="size-7" name="mdi:send" aria-hidden="true" title="Submit comment" />
				<span class="md:sr-only">Submit comment</span>
			</Button>
		</form>
	</div>
	<ul
		class="space-y-1 rounded border-red-600 dark:border-red-400 [&:not(:empty)]:border [&:not(:empty)]:p-2"
		id="commentErrors">
	</ul>
	<div
		class="rounded border-secondary-200 text-sm text-secondary-600 dark:border-secondary-800 dark:text-secondary-400 [&:not(:empty)]:border [&:not(:empty)]:p-2"
		id="commentSuccess">
	</div>
	<CommentList {post} server:defer>
		<div class="flex items-center gap-2" slot="fallback">
			<Icon class="size-8" name="mdi:comment" />
			Loading comments...
		</div>
	</CommentList>

	<p class="text-sm text-grayish-600 dark:text-grayish-300">
		Note: rude, inappropriate, or offensive comments will be deleted at my discretion.
	</p>
</section>

<script>
	import { isInputError } from "astro:actions"
	import { actions } from "astro:actions"

	const formComment = document.getElementById("formComment") as HTMLFormElement

	formComment.addEventListener("submit", async (event) => {
		event.preventDefault()
		const formData = new FormData(formComment)
		try {
			const commentSuccess = document.getElementById("commentSuccess") as HTMLDivElement
			commentSuccess.innerHTML = ""
			const commentErrors = document.getElementById("commentErrors") as HTMLUListElement
			commentErrors.innerHTML = ""
			const { data, error } = await actions.addComment(formData)

			if (error) {
				if (isInputError(error)) {
					Object.entries(error.fields).forEach(([key, value]) => {
						value.forEach((errorMsg) => {
							const li = document.createElement("li")
							li.classList.add("text-sm", "text-red-600", "dark:text-red-400")
							li.innerHTML = errorMsg
							commentErrors.appendChild(li)
						})
					})
					console.error("Comment submission input error: ", error.fields)
				} else {
					console.error("Comment submission other error: ", error)
				}
			} else {
				formComment.reset()
				commentSuccess.innerHTML = "Your comment has been submitted for approval. Thank you!"
			}
		} catch (error) {
			console.error("Comment submission server error: ", error)
		}
	})
</script>
