---
import MenuToggle from "./MenuToggle.astro"
import NavLink from "./NavLink.astro"

const navOpen = true
type MenuItem = {
	label: string
	link: string
}
const navItems: MenuItem[] = [
	{ label: "About", link: "/#about" },
	{ label: "Work", link: "/#work" },
	{ label: "Meet the Team", link: "/#team" },
	{ label: "Experience", link: "/#experience" },
	{ label: "Blog", link: "/blog" },
	{ label: "Contact", link: "/contact" }
]
---

<nav class="hidden lg:block">
	<ul class="flex gap-4">
		{
			navItems.map((navItem) => (
				<li>
					<NavLink
						href={navItem.link}
						aria-current={Astro.url.pathname === navItem.link ? "page" : null}>
						{navItem.label}
					</NavLink>
				</li>
			))
		}
	</ul>
</nav>

<nav class="lg:hidden">
	<div
		class="absolute inset-[unset] right-10 top-14 m-0 bg-transparent sm:right-12 sm:top-16 md:right-16 md:top-20"
		id="main-nav"
		popover>
		<ul
			class="flex flex-col items-end gap-4 bg-grayish-100/90 p-4 shadow-md shadow-primary-500/30 dark:bg-grayish-800/90">
			{
				navItems.map((navItem) => (
					<li>
						<NavLink
							href={navItem.link}
							aria-current={Astro.url.pathname === navItem.link ? "page" : null}>
							{navItem.label}
						</NavLink>
					</li>
				))
			}
		</ul>
	</div>
	<!-- Hamburger Menu -->
	<MenuToggle />
</nav>

<style>
	[popover]:popover-open {
		opacity: 1;
		transform: translateY(0);
	}
	[popover] {
		--duration: 0.5s;
		opacity: 0;
		transform: translateY(-100dvh);
		transition:
			opacity var(--duration) ease-in-out,
			transform var(--duration) ease-in-out,
			overlay var(--duration) ease-in-out allow-discrete,
			display var(--duration) ease-in-out allow-discrete;
	}
	@starting-style {
		[popover]:popover-open {
			opacity: 0;
			transform: translateY(-100dvh);
		}
	}
</style>
