---
import AsideLayout from "@layouts/AsideLayout.astro"
import { getCollection, type DataEntryMap } from "astro:content"

export interface Props {
	categories: { collection: "categories"; id: keyof DataEntryMap["categories"] }[]
	slug: string
}
const { categories, slug } = Astro.props as Props

const catIds = categories.map((category) => category.id)

const blogs = await getCollection(
	"blogs",
	(entry) =>
		catIds.every((cId) => entry.data.categories?.some((cat) => cat.id === cId)) &&
		entry.slug !== slug
)
const sortedBlogs = blogs.sort(
	(a, b) => new Date(b.data.createdAt).valueOf() - new Date(a.data.createdAt).valueOf()
)
---

<AsideLayout title="Articles in this category:">
	<ul class="flex flex-col gap-3 pl-4" role="list">
		{
			sortedBlogs.map(
				(blog, index) =>
					index < 10 && (
						<li class="text-sm leading-tight">
							<a
								class="no-underline underline-offset-2 hover:underline"
								href={`/blog/${blog.slug}`}
							>
								{blog.data.title}
							</a>
						</li>
					)
			)
		}
		{
			blogs.length > 10 && (
				<li>
					<a class="flex items-start gap-1" href={`/blog?category=${catIds.join(",")}`}>
						more...
					</a>
				</li>
			)
		}
	</ul>
</AsideLayout>
